# SALMANs TIC TAC TOE

#imports
from tkinter import *
import tkinter.messagebox
import tkinter.simpledialog as sd
import random
import time
from threading import Timer

# Global variables
playersTurn = "X"
allbuttons = []
btnPressed = 0
p1 = 0
p2 = 0
draw = 0
gameTypeAi = False

#Strategy
moves1 = [1,3,7,9]
moves2 = [5]
moves3 = [2,4,6,8]

nameX = ""
nameO = ""



def start():
    global name1, name2
    root = Tk()
    root.withdraw()
    root.resizable(0,0)
    
    nameX = sd.askstring("Name prompt", "Player1 (X), enter your name")
    nameO = sd.askstring("Name prompt", "Player2 (O), enter your name")
    
    


def main():
    # --------------------------------ALL FUNCTIONS-----------------------------------------

    def insert(button_id):
        global btnPressed, gameTypeAi

        btnPressed = button_id
        if playersTurn == "X":
            Player1()
        else:
            if gameTypeAi == False:
                Player2()
            else:
                ai()

    def Player1():

        global moves1,moves2,moves3

        allbuttons[btnPressed]["text"] = "X"

        if (btnPressed in moves1):
            moves1.remove(btnPressed)
            print("\nUser move played: " + str(btnPressed))
            print("Moves 1 remaining: " + str(moves1))
        elif (btnPressed in moves2):
            moves2.remove(btnPressed)
            print("\nUser move played: " + str(btnPressed))
            print("Moves 2 remaining: " + str(moves2))
        elif (btnPressed in moves3):
            moves3.remove(btnPressed)
            print("\nUser move played: " + str(btnPressed))
            print("Moves 3 remaining: " + str(moves3))

        checkResult()
        changeTurn()

    def Player2():
        allbuttons[btnPressed]["text"] = "O"
        checkResult()
        changeTurn()

    
    def setAi():
        global gameTypeAi
        newgame()
        gameTypeAi = True

    def ai():
        global playersTurn, moves1, moves2

        #time.sleep(1)

        playersTurn = "O"

        if (moves1 != []):
            for i in range(4):
                rand1 = random.choice(moves1)
                if allbuttons[rand1]["text"] == " ":
                    print("\nrandom move chose = " + str(rand1))
                    allbuttons[rand1]["text"] = playersTurn
                    moves1.remove(rand1)
                    print("Moves 1 remaining: " + str(moves1))
                    checkResult()
                    changeTurn()
                    break

        elif (moves2 != []):
            for i in range(1):
                rand2 = random.choice(moves2)
                if allbuttons[rand2]["text"] == " ":
                    print("\nrandom move chose = " + str(rand2))
                    allbuttons[rand2]["text"] = playersTurn
                    moves2.remove(rand2)
                    print("Moves 2 remaining: " + str(moves2))
                    checkResult()
                    changeTurn()
                    break

        elif (moves3 !=[]):
            for i in range(4):
                rand3 = random.choice(moves3)
                if allbuttons[rand3]["text"] == " ":
                    print("\nrandom move chose = " + str(rand3))
                    allbuttons[rand3]["text"] = playersTurn
                    moves3.remove(rand3)
                    print("Moves 3 remaining: " + str(moves3))
                    checkResult()
                    changeTurn()
                    break
        else:
            print("error")


    def checkResult():

        global p1,p2,draw

        # check for horizontal wins
        for x in range(1, 10, 3):
            if (allbuttons[x]["text"] == playersTurn and allbuttons[x + 1]["text"] == playersTurn and allbuttons[x + 2][
                "text"] == playersTurn):
                if playersTurn == "X":
                    p1 = p1+1
                    print("Player1 wins")
                else:
                    p2 = p2+1
                    print("Player2 wins")
                playAgain(playersTurn)

        # check for vertical wins
        for x in range(1, 4, 1):
            if (allbuttons[x]["text"] == playersTurn and allbuttons[x + 3]["text"] == playersTurn and allbuttons[x + 6][
                "text"] == playersTurn):
                if playersTurn == "X":
                    p1 = p1+1
                    print("Player1 wins")
                else:
                    p2 = p2+1
                    print("Player2 wins") 
                playAgain(playersTurn)

        # check for diagonal wins    
        if (allbuttons[1]["text"] == playersTurn and allbuttons[5]["text"] == playersTurn and allbuttons[9][
            "text"] == playersTurn or allbuttons[3]["text"] == playersTurn and allbuttons[5]["text"] == playersTurn and
                allbuttons[7]["text"] == playersTurn):
                if playersTurn == "X":
                    p1 = p1+1
                    print("Player1 wins")
                else:
                    p2 = p2+1
                    print("Player2 wins")    
                playAgain(playersTurn)

        # check for draw    
        temp = 0
        for x in range (1,10):
            if (allbuttons[x]["text"] == "X" or allbuttons[x]["text"] == "O"):
                temp = temp + 1
            if temp == 9:
                draw = draw + 1
                playAgain("Draw")




    def changeTurn():
        global playersTurn

        if gameTypeAi == False:
            if(playersTurn == "X"):
                playersTurn = "O"
            else:
                playersTurn = "X"


        else:
            if(playersTurn == "X"):
                ai()
                #t = Timer(1.0, ai)
                #t.start()
            else:
                playersTurn = "X"


        header.configure(text="Tic Tac Toe \n it is " + playersTurn + "'s go!")

    # Ask to play new game
    def playAgain(winner):
        if winner == "X" or winner == "O":
            playAgainX = tkinter.messagebox.askyesno("WINNER", "The winner is %s \n Would you like to play again?" % winner)
            if playAgainX is True:
                reset()
            elif playAgainX is False:
                tk.destroy()
        elif winner == "Draw":
            playAgainX = tkinter.messagebox.askyesno("Draw", "The game was a Draw \n Would you like to play again?")
            if playAgainX is True:
                reset()
            elif playAgainX is False:
                tk.destroy()


    # Reset board for new game
    def reset():
        global moves1,moves2
        moves1 = [1,3,7,9]
        moves2 = [5]
        moves3 = [2,4,6,8]
        for x in range(1, 10):
            player1.configure(text="Player 1: %d" %p1)
            player2.configure(text="Player 2: %d" %p2)
            Draws.configure(text="Draws: %d" %draw)
            allbuttons[x]["text"] = " "

    
    def newgame():
        global p1,p2,draw,moves1,moves2
        p1 = 0
        p2 = 0
        draw = 0
        moves1 = [1,3,7,9]
        moves2 = [5]
        moves3 = [2,4,6,8]
        gameTypeAi = False
        reset()

    # -----------------------------END ALL FUNCTIONS----------------------------------




    # ------------------------------CREATE BOARD--------------------------------------

    # Create and configure the layout
    tk = Tk()
    tk.title("Tic Tac Toe")
    tk.configure(background='chartreuse4')


    # Menu bar
    menubar = Menu(tk)
    tk.config(menu=menubar)

    submenu = Menu(menubar)
    menubar.add_cascade(label="File", menu=submenu)
    submenu.add_command(label="New Game..", command=newgame)
    submenu.add_command(label="Exit", command=tk.destroy)
    submenu2 = Menu(menubar)
    menubar.add_cascade(label="Game Type", menu=submenu2)
    submenu2.add_command(label="Single Player", command=newgame)
    submenu2.add_command(label="Multiplayer", command=setAi)


    # --- TOP FRAME ---
    # top label
    header = Label(tk, text="Tic Tac Toe \n it is " + playersTurn + "'s go!", fg="white", bg="chartreuse4", font=("Helvetica", 12))
    header.grid(row=0, column=1)


    # --- MIDDLE FRAME ---
    
    btn1 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(1))
    btn1.grid(row = 3, column = 0)

    btn2 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(2))
    btn2.grid(row = 3, column = 1)

    btn3 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(3))
    btn3.grid(row = 3, column = 2)

    btn4 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(4))
    btn4.grid(row = 2, column = 0)

    btn5 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(5))
    btn5.grid(row = 2, column = 1)

    btn6 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(6))
    btn6.grid(row = 2, column = 2)

    btn7 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(7))
    btn7.grid(row = 1, column = 0)

    btn8 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(8))
    btn8.grid(row = 1, column = 1)

    btn9 = Button(tk, text=" ", height=7, width=14, bg="chartreuse", command=lambda: insert(9))
    btn9.grid(row = 1, column = 2)

    allbuttons = ("", btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)
    

    # --- BOTTOM FRAME ---

    scoreboard = Label(tk, text="Scoreboard", fg="white", bg="chartreuse4", font=("Helvetica", 12))
    scoreboard.grid(row=4, column=1)

    player1 = Label(tk, text="Player1: %d" %p1, fg="white", bg="chartreuse4", font=("Helvetica", 12))
    player1.grid(row=5,column=0)

    player2 = Label(tk, text="Player2: %d" %p2, fg="white", bg="chartreuse4", font=("Helvetica", 12))
    player2.grid(row=5,column=1)

    Draws = Label(tk, text="Draws: %d" %draw, fg="white", bg="chartreuse4", font=("Helvetica", 12))
    Draws.grid(row=5,column=2)



    # -------------------------------END OF CREATE BOARD------------------------------------


    # keep program open until user closes
    tk.mainloop()


main()
